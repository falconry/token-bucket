name: tests

on:
  # Trigger the tests workflow on push or pull requests.
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - master

jobs:
  run_tox:
    name: tox -e ${{ matrix.toxenv }} (${{matrix.python-version}} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
        os:
          - "ubuntu-20.04"
        toxenv:
          - "blue"
          - "pep8"
        include:
          - python-version: "3.7"
            os: ubuntu-22.04
            toxenv: py37
          - python-version: "3.8"
            os: ubuntu-22.04
            toxenv: py38
          - python-version: "3.9"
            os: ubuntu-22.04
            toxenv: py39
          - python-version: "3.10"
            os: ubuntu-22.04
            toxenv: py310
          - python-version: "3.11"
            os: ubuntu-22.04
            toxenv: py311
          - python-version: "3.12.0-alpha - 3.12"
            os: ubuntu-22.04
            toxenv: py312
          - python-version: "pypy3.9"
            os: ubuntu-22.04
            # NOTE(vytas): do not trace coverage under PyPy, it seems it is
            #   extremely expensive on PyPy 3.9 under extensive threading.
            toxenv: nocover

    # Steps to run in each job.
    # Some are GitHub actions, others run shell commands.
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage tox
          python --version
          pip --version
          tox --version
          coverage --version

      - name: Run tests
        run: |
          tox -e ${{ matrix.toxenv }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        if: ${{ matrix.toxenv == 'py38' }}
        with:
          env_vars: PYTHON
          fail_ci_if_error: true
